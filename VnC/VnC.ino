/*
  Sketch generated by the Arduino IoT Cloud Thing "ESP32 test"
  https://create.arduino.cc/cloud/things/511b1292-16be-4890-b9f1-34df419b2816

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudElectricCurrent current;
  CloudElectricPotential voltage;
  bool ledSwitch;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#define voltagePin A1
#define currentPin 8
#include "ACS712.h"
float voltage;
float current;


ACS712  ACS(A0, 5.0, 1023, 100);

//functions
float voltageCorrection (int voltPin) {
  float value;
  value = analogRead(voltPin);
  Serial.println(value);
  float value1 = value * 5 /1023 * 2.003;
  Serial.println("voltage");
  Serial.println(value1);
  return value1;
}

// Arduino UNO has 5.0 volt with a max ADC value of 1023 steps
// ACS712 5A  uses 185 mV per A
// ACS712 20A uses 100 mV per A
// ACS712 30A uses  66 mV per A
// Current measurement from hall current sensor 

float currentmeasure () {
  float mA = ACS.mA_DC();
  float mycurr = (mA+6647)/3373 - 1.97;
  return mycurr;
}

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(115200);
  Serial.println(__FILE__);
  ACS.autoMidPoint();
  
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  pinMode(voltagePin, INPUT);
  pinMode(currentPin, INPUT);
}

void loop() {
  voltage = voltageCorrection(voltagePin);
  Serial.println("main loop");
  Serial.println(voltage);
  
  current = currentmeasure();
  Serial.println(current);
}
